version: '4'
services:
  # Database
  mysql:
    image: mysql:8.4.2
    container_name: microapply-mysql
    environment:
      MYSQL_ROOT_PASSWORD: mysql
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql # inits when container starts
  phpMyAdmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    container_name: microapply-phpmyadmin
    ports:
      - "3001:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: mysql
  # Auth
  keycloak-mysql:
    container_name: microapply-keycloak-mysql
    image: mysql:8
    volumes:
      - ./volume-data/mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
  keycloak:
    container_name: microapply-keycloak
    image: quay.io/keycloak/keycloak:24.0.1
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8181:8080"
    volumes:
      - ./docker/keycloak/realms/:/opt/keycloak/data/import/
    depends_on:
      - keycloak-mysql
  # Message broker
  rabbitmq:
    container_name: microapply-rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  # RabbitMQ default port
      - "15672:15672"  # RabbitMQ management plugin port
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
  # Email
  mailhog:
    image: mailhog/mailhog
    container_name: microapply-mailhog
    ports:
      - "8025:8025"  # MailHog web interface
      - "1025:1025"  # SMTP port
    networks:
      - mailhog-network
  # Logging
  loki:
    image: grafana/loki:main
    container_name: microapply-loki
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"
  prometheus:
    image: prom/prometheus:v2.46.0
    container_name: microapply-prometheus
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
  tempo:
    image: grafana/tempo:2.2.2
    container_name: microapply-tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yaml:ro
      - ./data/tempo:/tmp/tempo
    ports:
      - "3110:3100"  # Tempo
      - "9411:9411" # zipkin
  grafana:
    image: grafana/grafana:10.1.0
    container_name: microapply-grafana
    volumes:
      - ./docker/grafana:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
networks:
  mailhog-network:
    driver: bridge